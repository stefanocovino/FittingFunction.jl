var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = FittingFunction","category":"page"},{"location":"#FittingFunction","page":"Home","title":"FittingFunction","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for FittingFunction.","category":"page"},{"location":"","page":"Home","title":"Home","text":"A set of functions I am often using in carrying out regressions.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [FittingFunction]","category":"page"},{"location":"#FittingFunction.Band-NTuple{5, Any}","page":"Home","title":"FittingFunction.Band","text":"Band(E,α,β,E₀,A)\n\nCompute the so-called 'Band function'\n\n#Arguments\n\nE input energy.\nα low-energy index.\nβ high-energy index.\nE₀ break energy.\nA normalization.\n\nThe peak-energy is then Ep = (2+α)E₀.\n\nExamples\n\nBand(300.,-2.,-1.,200.,1.)\n\n# output\n\n-0.45304697140984085\n\n\n\n\n\n","category":"method"},{"location":"#FittingFunction.CPL-NTuple{4, Any}","page":"Home","title":"FittingFunction.CPL","text":"CPL(E,N,α,Ec;E0=1.)\n\nCompute a cut-off power-law.\n\nArguments\n\nα spectral index.\nN normalization.\nE input energy.\nEc cut-off energy.\nE0 energy for power-law normalization.\n\nExamples\n\nCPL(3.,1.,-1.,2.)\n\n# output\n\n0.0743767200494766\n\n\n\n\n\n","category":"method"},{"location":"#FittingFunction.Counts2Mag-Tuple{Any, Any}","page":"Home","title":"FittingFunction.Counts2Mag","text":"Counts2Mag(cts,ects;zp=25.0,ezp=0.0)\n\nConvert counts (or flux) to magntudes,\n\nArguments\n\ncts counts.\nects count uncertainty.\nzp magnitude zero-point\nzp zero-point uncertainty.\n\nExamples\n\nCounts2Mag(100,10)\n\n# output\n\n(20.0, 0.10857362047581294)\n\n\n\n\n\n","category":"method"},{"location":"#FittingFunction.Ecm2sA2Jy-Tuple{Any, Any}","page":"Home","title":"FittingFunction.Ecm2sA2Jy","text":"Ecm2sA2Jy(fluden, lambd)\n\nConvert flux densities in ergs^-1 cm^-2 Angstrom^-1 to Jy.\n\nArguments\n\nfluden flux density (ergs^-1 cm^-2 Angstrom^-1).\nlambd wavelength (Angstrom).\n\nExamples\n\n\nEcm2sA2Jy([1.2e-15,2e-15,2.5e-15],[5000,5500,6000])\n\n# output\n\n3-element Vector{Float64}:\n 0.001\n 0.002016666666666667\n 0.0029999999999999996\n\n\n\n\n\n","category":"method"},{"location":"#FittingFunction.Extinction-Tuple{Any, Any}","page":"Home","title":"FittingFunction.Extinction","text":"Extinction(wave,EBV;gal=\"SMC\",Rv=FFGals[\"SMC\"],z=0.)\n\nCompute the UV/optical/extinction.\n\nArgguments\n\nwave input wavelengths (Angstrom).\nEBV color excess E(B-V) (magnitude).\ngal one of the galaxy extinction recipes listed in the 'FFGals' (exported) dictionary.\nRv selective extinction.\nz redshift of the absorpber.\n\nReferences about the adopted extinction curves are discussed in the documentation of the DustExtinction package.\n\nExamples\n\nExtinction(5500.,1,gal=\"MW\",Rv=FFGals[\"MW\"],z=0.)\n\n# output\n\n0.06017150537641227\n\n\n\n\n\n","category":"method"},{"location":"#FittingFunction.FourierPeriodogram-Tuple{Any, Any}","page":"Home","title":"FittingFunction.FourierPeriodogram","text":"FourierPeriodogram(signal,fs;zerofreq=true)\n\nCompute the discrete Fourier periodogram for the inpout signal.\n\nArguments\n\nsignal array of input data.\nfs sampling in frequency of the input data (1/dt).\n'zerofreq' is true (false) to (not) include the zero frequency in the output. \n\nOutputs are two arrays: the frequencies and the powers.\n\nExamples\n\n\nFourierPeriodogram([1.,2.,3.,4.],1.)\n\n# output\n\n([0.0, 0.25], [100.0, 8.000000000000002])\n\n\n\n\n\n","category":"method"},{"location":"#FittingFunction.GaussAbs-NTuple{4, Any}","page":"Home","title":"FittingFunction.GaussAbs","text":"GaussAbs(E,Ed,σ,El)\n\nCompute a Gaussian absorption.\n\nArguments\n\nEd depth.  at\nE input energy.\nEl absorption center.\nσ absorption width (FWHM235).\nA normalization.\n\nExamples\n\n\nGaussAbs(2.,1.,0.1,2.)\n\n# output\n\n0.018510395162776326\n\n\n\n\n\n","category":"method"},{"location":"#FittingFunction.Gaussian-NTuple{4, Any}","page":"Home","title":"FittingFunction.Gaussian","text":"Gaussian(E,A,σ,El)\n\nCompute a Gaussian.\n\nArguments\n\nE input energy.\nEl Gussian center.\nσ absorption width (FWHM235).\nA normalization.\n\nExamples\n\n\nGaussian(3.,1.,0.1,2.)\n\n# output\n\n4.009419869036418\n\n\n\n\n\n","category":"method"},{"location":"#FittingFunction.GetAtomicData","page":"Home","title":"FittingFunction.GetAtomicData","text":"GetAtomicData(table::String=\"\")::DataFrame\n\nReturn a table with atomic data among those available.\n\nCalling the function with no parameter shows the available tables. At present we have:\n\n\"FitLyman\". This is the original table generated for the \"FitLyman\" ESO-MIDAS package.\n\"JitrikBunge04\". This is a collection of atomic data prepared by Jitrik & Bunge (2004).\n\"VALD03\". This is a collection of atomic data extracted from the VALD3 database.\n\nExamples\n\nfly = GetAtomicData(\"FitLyman\")\n\n\n\n\n\n","category":"function"},{"location":"#FittingFunction.Jy2Ecm2sA-Tuple{Any, Any}","page":"Home","title":"FittingFunction.Jy2Ecm2sA","text":"Jy2Ecm2sA(fluden, lambd)\n\nConvert flux densities in Jy to ergs^-1 cm^-2 Angstrom^-1.\n\nArguments\n\nfluden flux density (Jy).\nlambd wavelength (Angstrom).\n\nExamples\n\n\nJy2Ecm2sA([1e-3,2e-3,3e-3],[5000,5500,6000])\n\n# output\n\n3-element Vector{Float64}:\n 1.2000000000000002e-15\n 1.9834710743801656e-15\n 2.5e-15\n\n\n\n\n\n","category":"method"},{"location":"#FittingFunction.Mag2Counts-Tuple{Any, Any}","page":"Home","title":"FittingFunction.Mag2Counts","text":"Mag2Counts(mag,emag;zp=25.0)\n\nConvert magnitudes to counts (or flux).\n\nArguments\n\nmag input magnitude.\nemag magnitude uncertainty.\nzp zero-point.\n\nExamples\n\n\nMag2Counts(20,0.1)\n\n# output\n\n(100.0, 9.210340371976184)\n\n\n\n\n\n","category":"method"},{"location":"#FittingFunction.PL-Tuple{Any, Any, Any}","page":"Home","title":"FittingFunction.PL","text":"PL(E,N,α;E0=1.)\n\nCompute a power-law with.\n\nArguments\n\nα spectral index.\nN normalization.\nE input energy.\nE0 power-law energy normalization.\n\nExamples\n\n\nPL(3.,1.,-1.)\n\n# output\n\n0.3333333333333333\n\n\n\n\n\n","category":"method"},{"location":"#FittingFunction.Pol2Stokes-NTuple{4, Any}","page":"Home","title":"FittingFunction.Pol2Stokes","text":"Pol2Stokes(i, p, t, c; ep=0.0, et=0.0, ec=0.0)\n\nCompute the Stokes parameters for a given polarisation degree and position angle.\n\nArguments\n\ni total intensity.\np polarisation degree.\nt position angle (randians).\nc the circular polarisation.\nep polarization uncertainty.\net position angle uncertainty.\nec circular polarization uncertainty.\n\nThe ouput is: intensity q, u, v Stokes parameters and respective errors.\n\nExamples\n\n\nPol2Stokes(1.,0.1,0.1,0.)\n\n# output\n\n(1.0, 0.09800665778412417, 0.019866933079506124, 0.0, 0.0, 0.0, 0.0)\n\n\n\n\n\n","category":"method"},{"location":"#FittingFunction.SBPL-NTuple{5, Any}","page":"Home","title":"FittingFunction.SBPL","text":"SBPL(E,N,α,β,Eb)\n\nCompute a smoothly joint broken power-law.\n\nArguemnts\n\nα pre-break spectral index.\nβ post-break spectral index.\nEb break energy.\nN normalization.\nE input energy.\n\nExamples\n\n\nSBPL(6.,1.,-1.,-1.5,5.)\n\n# output\n\n0.15214515486254615\n\n\n\n\n\n","category":"method"},{"location":"#FittingFunction.SBPL2-NTuple{7, Any}","page":"Home","title":"FittingFunction.SBPL2","text":"SBPL2(E,N,α,β,γ,Eb1,Eb2)\n\nCompute a smoothly joint double broken power-law.\n\nArguments\n\nα pre-break spectral index.\nβ inter-break spectral index.\nγ post-break spectral index.\nEb1 first break energy.\nEb2 second break energy.\nN normalization.\nE input energy.\n\nExamples\n\n\nSBPL2([4.,6.,8.],1.,-1.,-1.5,-2.,5.,7.)\n\n# output\n\n3-element Vector{Float64}:\n 0.25\n 0.06804138174397717\n 0.04133986423538423\n\n\n\n\n\n","category":"method"},{"location":"#FittingFunction.SigmaClip","page":"Home","title":"FittingFunction.SigmaClip","text":"SigmaClip(x, ex=ones(size(x)); sigmacutlevel=2)\n\nSigma-clipping filtering of an input array,\n\nArguments\n\nx input array.\nex uncertainties.\nsigmacutlevel sigma-clipping level.\n\nIt performs a one-iteration sigma clipping and reports a mask to select the surviving elements in the input arrays or other related arrays.\n\nExamples\n\n\nx = [4.,6.,8.,1.,3.,5.,20.]\nmask = SigmaClip(x)\nx[mask]\n\n# output\n\n6-element Vector{Float64}:\n 4.0\n 6.0\n 8.0\n 1.0\n 3.0\n 5.0\n\n\n\n\n\n","category":"function"},{"location":"#FittingFunction.Stokes2Pol-NTuple{4, Any}","page":"Home","title":"FittingFunction.Stokes2Pol","text":"Stokes2Pol(i, q, u, v; eq=0.0, eu=0.0, ev=0.0)\n\nCompute the polarisation degree and position angle from the Stokes parameters.\n\nArguments\n\ni total intensity.\nq verical/horizontal polarization.\nu oblique polarization.\nv circular polarisation.\neq uncertainty on the q parameter.\neu uncertainty on the u parameter.\nev uncertainty on the v parameter.\n\nThe ouput is given by the intensity i, polarisation degree, p, position angle (randians) theta and circular polarisation chi, with respective errors.\n\nExamples\n\n\nStokes2Pol(1.,0.1,0.1,0.)\n\n# output\n\n(1.0, 0.14142135623730953, 0.39269908169872414, 0.0, 0.0, 0.0, 0.0)\n\n\n\n\n\n","category":"method"},{"location":"#FittingFunction.TauVoigt-NTuple{5, Any}","page":"Home","title":"FittingFunction.TauVoigt","text":"TauVoigt(λ,NHI,DopplerBroadening,z,transition)\n\nCompute the opacity due to a given absorption transition.\n\nArguments\n\nλ is the wavelenghths (cm).\nN the column density (cm^-2).\nDopplerBroadening is the Doppler broadening (cms^-1).\nz is the source redshift.\ntransition is a tuple formed by the central wawelength (cm), the oscillator   strength and the damping coefficient (s^-1) for the given transition.\n\nThe Doppler broadening factor is typicaly due to either an intrinsic thermal broadening (b_K = sqrt2KTm) or to a turbulent motion of the gas (b_T = sqrtσ_T, where σ_T is the inner velocity dispersion). These two factors can be summed in quadrature, i.e. b = sqrtb_K^2 + b_T^2.\n\nExamples\n\n\nTauVoigt(range(start=1494.5,stop=1495.5,step=0.1) .* 1e-8,1e18,1e5,0.,[1495.05*1e-8,0.54,8.106e8])\n\n# output\n\n11-element Vector{Float64}:\n  0.5408331361420329\n  0.8079604230648749\n  1.3357686994197793\n  2.618871809580839\n  7.282358478732964\n 66.40911467182524\n 66.40911467182524\n  7.282358478732964\n  2.618871809580839\n  1.3357686994184856\n  0.8079604230648749\n\n\n\n\n\n","category":"method"},{"location":"#FittingFunction.VoigtFunctTG-Tuple{Any, Any}","page":"Home","title":"FittingFunction.VoigtFunctTG","text":"VoigtFuncTG(a,v)\n\nApproximate the Voigt (or line broadening function) function.\n\nIt was introduced by Tepper-Garcia (2006). It is of high accuracy provided that a le 10^-4. The a and v parameters are defined as:     a = fracGamma lambda_c4pi b 10^13 and v = frac(lambda_c - lambda)cb lambda_c sqrt2 log 2, where lambda_c is the central wavelength of the transition, c the speed of light, b the Doppler broadening factor and Gamma the damping coefficient.\n\nExamples\n\n\nFittingFunction.VoigtFunctTG(1e-5,1.)\n\n# output\n\n0.36788094737611143\n\n\n\n\n\n","category":"method"},{"location":"#FittingFunction.XAbs-Tuple{Any}","page":"Home","title":"FittingFunction.XAbs","text":"XAbs(E; NH=1e20, z=0)\n\nCompute the effective absorption cross section per hydrogen atom.\n\nIt is based on the Morrison & McCammon (1983) recipe.\n\nArguments\n\nE is the energy (KeV, in the 0.03-10 KeV range).\nN is the column density  (particle per square cm).\nz is the redshift.\n\nExamples\n\n\nXAbs([0.5,1.25,2.], NH=1e20, z=0)\n\n# output\n\n3-element Vector{Float64}:\n 0.9290803992951834\n 0.9868927382232576\n 0.9957079871273042\n\n\n\n\n\n","category":"method"},{"location":"#FittingFunction.Z2N-Tuple{Any, Any}","page":"Home","title":"FittingFunction.Z2N","text":"Z2N(freqs, time)\n\nCompute the Rayleigh power spectrum of a time series in a given range of frequencies.\n\nArguments\n\nfreqs is an array with frequencies in units of 1/[time].\ntime is an array with the time series where to find a period.\nharm is the number of harmonics to be used in the analysis.\n\nExamples\n\n\nZ2N([1.,0.5,0.25], [1.,2.,2.5,3.5,5.])\n\n# output\n\n3-element Vector{Any}:\n 0.4\n 0.4000000000000002\n 0.537258300203048\n\n\n\n\n\n","category":"method"}]
}
