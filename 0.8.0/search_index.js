var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = FittingFunction","category":"page"},{"location":"#FittingFunction","page":"Home","title":"FittingFunction","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for FittingFunction.","category":"page"},{"location":"","page":"Home","title":"Home","text":"A set of functions I am often using in carrying out regressions.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [FittingFunction]","category":"page"},{"location":"#FittingFunction.Band-NTuple{5, Any}","page":"Home","title":"FittingFunction.Band","text":"Band(E,α,β,E₀,A)\n\nCompute the so-called 'Band function', at input energy 'E'. 'α' is the low-energy index, 'β' the high-energy index and 'E₀' the break energy. 'A' is the normalization. The peak-energy is 'Ep = (2+α)E₀'.\n\nExamples\n\nBand(300.,-2.,-1.,200.,1.)\n\n# output\n\n-0.45304697140984085\n\n\n\n\n\n","category":"method"},{"location":"#FittingFunction.CPL-NTuple{4, Any}","page":"Home","title":"FittingFunction.CPL","text":"CPL(E,N,α,Ec;E0=1.)\n\nComputes a cut-off power-law with spectral index 'α' and normalization 'N' at input 'E' and cut-off energy 'Ec'. You can normalize the power-law at 'E0'.\n\nExamples\n\nCPL(3.,1.,-1.,2.)\n\n# output\n\n0.0743767200494766\n\n\n\n\n\n","category":"method"},{"location":"#FittingFunction.Counts2Mag-Tuple{Any, Any}","page":"Home","title":"FittingFunction.Counts2Mag","text":"Counts2Mag(cts,ects;zp=25.0,ezp=0.0)\n\nConvert counts (or flux) 'cts', with uncertainty 'ects', to magnitude scale with zero-point 'zp' and relative uncertainty.\n\nExamples\n\nCounts2Mag(100,10)\n\n# output\n\n(20.0, 0.10857362047581294)\n\n\n\n\n\n","category":"method"},{"location":"#FittingFunction.Extinction-Tuple{Any, Any}","page":"Home","title":"FittingFunction.Extinction","text":"Extinction(wave,EBV;gal=\"SMC\",Rv=FFGals[\"SMC\"],z=0.)\n\nCompute the UV/optical/extinction at the input wavelength 'wave', in Angstrom. 'EBV' is E(B-V) in magnitudes, 'gal' is one of the galaxy extinction recipes listed in the 'FFGals' (exported) dictionary. 'Rv' is the seelctive extinction and 'z' is the redshift of the absorpber. References about the adopted extinction curves are discussed in the documentation of the DustExtinction package.\n\nExamples\n\nExtinction(5500.,1,gal=\"MW\",Rv=FFGals[\"MW\"],z=0.)\n\n# output\n\n0.06017150537641227\n\n\n\n\n\n","category":"method"},{"location":"#FittingFunction.FindRebinSchema-Tuple{AbstractVector{Float64}, AbstractVector{Float64}}","page":"Home","title":"FittingFunction.FindRebinSchema","text":"FindRebinSchema(x,ey;minSN=5)::AbstractVector{Real}\n\nCompute the rebin schema to guarantee that the S/N is at least 'minSN' in each bin (or channel). 'x' and 'ex' are the input data and relative uncertainties.\n\nExamples\n\n\nx = [1.,2.,3.,4.,]\nex = [0.1,0.5,0.6,0.05]\n\nFindRebinSchema(x,ex)\n\n# output\n\n3-element Vector{Real}:\n 1\n 3\n 4\n\n\n\n\n\n\n","category":"method"},{"location":"#FittingFunction.GaussAbs-NTuple{4, Any}","page":"Home","title":"FittingFunction.GaussAbs","text":"GaussAbs(E,Ed,σ,El)\n\nComputes a Gaussian absorption with depth 'Ed' at energy 'E' with center in 'El' and width (FWHM/2.35) 'σ'. 'A.\n\nExamples\n\nGaussAbs(2.,1.,0.1,2.)\n\n# output\n\n0.018510395162776326\n\n\n\n\n\n","category":"method"},{"location":"#FittingFunction.Gaussian-NTuple{4, Any}","page":"Home","title":"FittingFunction.Gaussian","text":"Gaussian(E,A,σ,El)\n\nComputes a Gaussian at energy 'E' with center in 'El' and width (FWHM/2.35) 'σ'. 'A is the normalization.\n\nExamples\n\nGaussian(3.,1.,0.1,2.)\n\n# output\n\n4.009419869036418\n\n\n\n\n\n","category":"method"},{"location":"#FittingFunction.Mag2Counts-Tuple{Any, Any}","page":"Home","title":"FittingFunction.Mag2Counts","text":"Mag2Counts(mag,emag;zp=25.0)\n\nConvert magnitudes 'mag' with uncertainty 'emag' to counts (or flux) with zero-point 'zp'.\n\nExamples\n\nMag2Counts(20,0.1)\n\n# output\n\n(100.0, 9.210340371976184)\n\n\n\n\n\n","category":"method"},{"location":"#FittingFunction.PL-Tuple{Any, Any, Any}","page":"Home","title":"FittingFunction.PL","text":"PL(E,N,α;E0=1.)\n\nComputes a power-law with spectral index 'α' and normalization 'N' at input 'E'. You can normalize the power-law at 'E0'.\n\nExamples\n\nPL(3.,1.,-1.)\n\n# output\n\n0.3333333333333333\n\n\n\n\n\n","category":"method"},{"location":"#FittingFunction.Pol2Stokes-NTuple{4, Any}","page":"Home","title":"FittingFunction.Pol2Stokes","text":"Pol2Stokes(i, p, t, c; ep=0.0, et=0.0, ec=0.0)\n\nComputes the Stokes parameters for a given polarisation degree and position angle. 'i' is total intensity, 'p' the polarisation degree, 't' the position angle (randians) and 'c' the circular polarisation. The errors 'ep', 'ew, and 'e' are optional. The ouput is: intensity 'q', 'u', 'v' Stokes parameters and respective errors.\n\nExamples\n\nPol2Stokes(1.,0.1,0.1,0.)\n\n# output\n\n(1.0, 0.09800665778412417, 0.019866933079506124, 0.0, 0.0, 0.0, 0.0)\n\n\n\n\n\n","category":"method"},{"location":"#FittingFunction.SBPL-NTuple{5, Any}","page":"Home","title":"FittingFunction.SBPL","text":"SBPL(E,N,α,β,Eb)\n\nComputes a smoothly joint broken power-law with spectral index 'α' and 'β', a break at 'Eb', normalization 'N' and input energy'E'.\n\nExamples\n\nSBPL(6.,1.,-1.,-1.5,5.)\n\n# output\n\n0.15214515486254615\n\n\n\n\n\n","category":"method"},{"location":"#FittingFunction.SBPL2-NTuple{7, Any}","page":"Home","title":"FittingFunction.SBPL2","text":"SBPL2(E,N,α,β,γ,Eb1,Eb2)\n\nComputes a smoothly joint double broken power-law with spectral index 'α', 'β' and 'γ', and two breaks at 'Eb1' and 'Eb2'. The normalization is 'N' and the input energy 'E'.\n\nExamples\n\nSBPL2([4.,6.,8.],1.,-1.,-1.5,-2.,5.,7.)\n\n# output\n\n3-element Vector{Float64}:\n 0.25\n 0.06804138174397717\n 0.04133986423538423\n\n\n\n\n\n","category":"method"},{"location":"#FittingFunction.Stokes2Pol-NTuple{4, Any}","page":"Home","title":"FittingFunction.Stokes2Pol","text":"Stokes2Pol(i, q, u, v; eq=0.0, eu=0.0, ev=0.0)\n\nComputes the polarisation degree and position angle given the Stokes parameters: 'i', total intensity, and 'q', 'u' and 'v'. The errors 'eq', 'eu, and 'ev' are optional. The ouput is: intensity 'i', polarisation degree, 'p', position angle (randians) 'theta' and circular polarisation 'chi', with respective errors.\n\nExamples\n\nStokes2Pol(1.,0.1,0.1,0.)\n\n# output\n\n(1.0, 0.14142135623730953, 0.39269908169872414, 0.0, 0.0, 0.0, 0.0)\n\n\n\n\n\n","category":"method"},{"location":"#FittingFunction.XAbs-Tuple{Any}","page":"Home","title":"FittingFunction.XAbs","text":"XAbs(E; NH=1e20, z=0)\n\nComputes the effective absorption cross section per hydrogen atom following Morrison & McCammon (1983). 'E' is the energy (KeV, in the 0.03-10 KeV range), 'NH' is the column density of hydrogen atom (particle per square cm) and 'z' is the redshift.\n\nExamples\n\nXAbs([0.5,1.25,2.], NH=1e20, z=0)\n\n# output\n\n3-element Vector{Float64}:\n 0.9290803992951834\n 0.9868927382232576\n 0.9957079871273042\n\n\n\n\n\n","category":"method"}]
}
